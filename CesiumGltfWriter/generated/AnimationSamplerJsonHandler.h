// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/AnimationSampler.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/IntegerJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class AnimationSamplerJsonHandler
    : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = AnimationSampler;

  AnimationSamplerJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, AnimationSampler* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyAnimationSampler(
      const std::string& objectType,
      const std::string_view& str,
      AnimationSampler& o);

private:
  AnimationSampler* _pObject = nullptr;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _input;
  CesiumJsonWriter::StringJsonHandler _interpolation;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _output;
};
} // namespace CesiumGltf
