// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "ClassJsonHandler.h"
#include "EnumJsonHandler.h"

#include <CesiumGltf/Schema.h>
#include <CesiumJsonWriter/DictionaryJsonHandler.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class SchemaJsonHandler : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = Schema;

  SchemaJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Schema* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeySchema(
      const std::string& objectType,
      const std::string_view& str,
      Schema& o);

private:
  Schema* _pObject = nullptr;
  CesiumJsonWriter::StringJsonHandler _name;
  CesiumJsonWriter::StringJsonHandler _description;
  CesiumJsonWriter::StringJsonHandler _version;
  CesiumJsonWriter::DictionaryJsonHandler<Class, ClassJsonHandler> _classes;
  CesiumJsonWriter::DictionaryJsonHandler<Enum, EnumJsonHandler> _enums;
};
} // namespace CesiumGltf
