// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/ClassProperty.h>
#include <CesiumJsonWriter/BoolJsonHandler.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/IntegerJsonHandler.h>
#include <CesiumJsonWriter/JsonObjectJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class ClassPropertyJsonHandler
    : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = ClassProperty;

  ClassPropertyJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, ClassProperty* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyClassProperty(
      const std::string& objectType,
      const std::string_view& str,
      ClassProperty& o);

private:
  ClassProperty* _pObject = nullptr;
  CesiumJsonWriter::StringJsonHandler _name;
  CesiumJsonWriter::StringJsonHandler _description;
  CesiumJsonWriter::StringJsonHandler _type;
  CesiumJsonWriter::StringJsonHandler _enumType;
  CesiumJsonWriter::JsonObjectJsonHandler _componentType;
  CesiumJsonWriter::IntegerJsonHandler<int64_t> _componentCount;
  CesiumJsonWriter::BoolJsonHandler _normalized;
  CesiumJsonWriter::JsonObjectJsonHandler _max;
  CesiumJsonWriter::JsonObjectJsonHandler _min;
  CesiumJsonWriter::JsonObjectJsonHandler _defaultProperty;
  CesiumJsonWriter::BoolJsonHandler _optional;
  CesiumJsonWriter::StringJsonHandler _semantic;
};
} // namespace CesiumGltf
