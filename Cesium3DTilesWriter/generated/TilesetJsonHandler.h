// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "AssetJsonHandler.h"
#include "PropertiesJsonHandler.h"
#include "TileJsonHandler.h"

#include <Cesium3DTiles/Tileset.h>
#include <CesiumJsonWriter/ArrayJsonHandler.h>
#include <CesiumJsonWriter/DictionaryJsonHandler.h>
#include <CesiumJsonWriter/DoubleJsonHandler.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace Cesium3DTiles {
class TilesetJsonHandler
    : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = Tileset;

  TilesetJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Tileset* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyTileset(
      const std::string& objectType,
      const std::string_view& str,
      Tileset& o);

private:
  Tileset* _pObject = nullptr;
  AssetJsonHandler _asset;
  CesiumJsonWriter::DictionaryJsonHandler<Properties, PropertiesJsonHandler>
      _properties;
  CesiumJsonWriter::DoubleJsonHandler _geometricError;
  TileJsonHandler _root;
  CesiumJsonWriter::
      ArrayJsonHandler<std::string, CesiumJsonWriter::StringJsonHandler>
          _extensionsUsed;
  CesiumJsonWriter::
      ArrayJsonHandler<std::string, CesiumJsonWriter::StringJsonHandler>
          _extensionsRequired;
};
} // namespace Cesium3DTiles
