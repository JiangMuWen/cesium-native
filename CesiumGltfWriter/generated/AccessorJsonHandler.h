// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "AccessorSparseJsonHandler.h"
#include "NamedObjectJsonHandler.h"

#include <CesiumGltf/Accessor.h>
#include <CesiumJsonWriter/ArrayJsonHandler.h>
#include <CesiumJsonWriter/BoolJsonHandler.h>
#include <CesiumJsonWriter/DoubleJsonHandler.h>
#include <CesiumJsonWriter/IntegerJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class AccessorJsonHandler : public NamedObjectJsonHandler {
public:
  using ValueType = Accessor;

  AccessorJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Accessor* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyAccessor(
      const std::string& objectType,
      const std::string_view& str,
      Accessor& o);

private:
  Accessor* _pObject = nullptr;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _bufferView;
  CesiumJsonWriter::IntegerJsonHandler<int64_t> _byteOffset;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _componentType;
  CesiumJsonWriter::BoolJsonHandler _normalized;
  CesiumJsonWriter::IntegerJsonHandler<int64_t> _count;
  CesiumJsonWriter::StringJsonHandler _type;
  CesiumJsonWriter::
      ArrayJsonHandler<double, CesiumJsonWriter::DoubleJsonHandler>
          _max;
  CesiumJsonWriter::
      ArrayJsonHandler<double, CesiumJsonWriter::DoubleJsonHandler>
          _min;
  AccessorSparseJsonHandler _sparse;
};
} // namespace CesiumGltf
