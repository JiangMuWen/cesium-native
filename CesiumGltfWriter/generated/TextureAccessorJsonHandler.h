// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "TextureInfoJsonHandler.h"

#include <CesiumGltf/TextureAccessor.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class TextureAccessorJsonHandler
    : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = TextureAccessor;

  TextureAccessorJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, TextureAccessor* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyTextureAccessor(
      const std::string& objectType,
      const std::string_view& str,
      TextureAccessor& o);

private:
  TextureAccessor* _pObject = nullptr;
  CesiumJsonWriter::StringJsonHandler _channels;
  TextureInfoJsonHandler _texture;
};
} // namespace CesiumGltf
