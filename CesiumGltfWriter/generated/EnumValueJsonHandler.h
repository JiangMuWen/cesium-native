// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/EnumValue.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/IntegerJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class EnumValueJsonHandler
    : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = EnumValue;

  EnumValueJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, EnumValue* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyEnumValue(
      const std::string& objectType,
      const std::string_view& str,
      EnumValue& o);

private:
  EnumValue* _pObject = nullptr;
  CesiumJsonWriter::StringJsonHandler _name;
  CesiumJsonWriter::StringJsonHandler _description;
  CesiumJsonWriter::IntegerJsonHandler<int64_t> _value;
};
} // namespace CesiumGltf
