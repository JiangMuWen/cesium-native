// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "MaterialNormalTextureInfoJsonHandler.h"
#include "MaterialOcclusionTextureInfoJsonHandler.h"
#include "MaterialPBRMetallicRoughnessJsonHandler.h"
#include "NamedObjectJsonHandler.h"
#include "TextureInfoJsonHandler.h"

#include <CesiumGltf/Material.h>
#include <CesiumJsonWriter/ArrayJsonHandler.h>
#include <CesiumJsonWriter/BoolJsonHandler.h>
#include <CesiumJsonWriter/DoubleJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class MaterialJsonHandler : public NamedObjectJsonHandler {
public:
  using ValueType = Material;

  MaterialJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Material* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyMaterial(
      const std::string& objectType,
      const std::string_view& str,
      Material& o);

private:
  Material* _pObject = nullptr;
  MaterialPBRMetallicRoughnessJsonHandler _pbrMetallicRoughness;
  MaterialNormalTextureInfoJsonHandler _normalTexture;
  MaterialOcclusionTextureInfoJsonHandler _occlusionTexture;
  TextureInfoJsonHandler _emissiveTexture;
  CesiumJsonWriter::
      ArrayJsonHandler<double, CesiumJsonWriter::DoubleJsonHandler>
          _emissiveFactor;
  CesiumJsonWriter::StringJsonHandler _alphaMode;
  CesiumJsonWriter::DoubleJsonHandler _alphaCutoff;
  CesiumJsonWriter::BoolJsonHandler _doubleSided;
};
} // namespace CesiumGltf
