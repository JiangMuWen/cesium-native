// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "NamedObjectJsonHandler.h"

#include <CesiumGltf/Buffer.h>
#include <CesiumJsonWriter/IntegerJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class BufferJsonHandler : public NamedObjectJsonHandler {
public:
  using ValueType = Buffer;

  BufferJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Buffer* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyBuffer(
      const std::string& objectType,
      const std::string_view& str,
      Buffer& o);

private:
  Buffer* _pObject = nullptr;
  CesiumJsonWriter::StringJsonHandler _uri;
  CesiumJsonWriter::IntegerJsonHandler<int64_t> _byteLength;
};
} // namespace CesiumGltf
