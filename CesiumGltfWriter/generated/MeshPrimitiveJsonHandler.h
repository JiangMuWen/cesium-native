// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include <CesiumGltf/MeshPrimitive.h>
#include <CesiumJsonWriter/ArrayJsonHandler.h>
#include <CesiumJsonWriter/DictionaryJsonHandler.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/IntegerJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class MeshPrimitiveJsonHandler
    : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = MeshPrimitive;

  MeshPrimitiveJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, MeshPrimitive* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyMeshPrimitive(
      const std::string& objectType,
      const std::string_view& str,
      MeshPrimitive& o);

private:
  MeshPrimitive* _pObject = nullptr;
  CesiumJsonWriter::DictionaryJsonHandler<
      int32_t,
      CesiumJsonWriter::IntegerJsonHandler<int32_t>>
      _attributes;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _indices;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _material;
  CesiumJsonWriter::IntegerJsonHandler<int32_t> _mode;
  CesiumJsonWriter::ArrayJsonHandler<
      std::unordered_map<std::string, int32_t>,
      CesiumJsonWriter::DictionaryJsonHandler<
          int32_t,
          CesiumJsonWriter::IntegerJsonHandler<int32_t>>>
      _targets;
};
} // namespace CesiumGltf
