// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "EnumValueJsonHandler.h"

#include <CesiumGltf/Enum.h>
#include <CesiumJsonWriter/ArrayJsonHandler.h>
#include <CesiumJsonWriter/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonWriter/StringJsonHandler.h>

namespace CesiumJsonWriter {
class ExtensionWriterContext;
}

namespace CesiumGltf {
class EnumJsonHandler : public CesiumJsonWriter::ExtensibleObjectJsonHandler {
public:
  using ValueType = Enum;

  EnumJsonHandler(
      const CesiumJsonWriter::ExtensionWriterContext& context) noexcept;
  void reset(IJsonHandler* pParentHandler, Enum* pObject);

  virtual IJsonHandler* writeObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* writeObjectKeyEnum(
      const std::string& objectType,
      const std::string_view& str,
      Enum& o);

private:
  Enum* _pObject = nullptr;
  CesiumJsonWriter::StringJsonHandler _name;
  CesiumJsonWriter::StringJsonHandler _description;
  CesiumJsonWriter::StringJsonHandler _valueType;
  CesiumJsonWriter::ArrayJsonHandler<EnumValue, EnumValueJsonHandler> _values;
};
} // namespace CesiumGltf
